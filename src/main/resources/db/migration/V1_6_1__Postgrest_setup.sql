ALTER TABLE IF EXISTS public.authenticationrecord ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.authenticationrecord_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.badge ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.badge_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.comment ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.comment_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.deal ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.deal_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.entity ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.entity_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.entity_tag ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.entity_tag_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.food ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.food_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.foodpantrysite ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.foodpantrysite_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.foodproperty ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.foodproperty_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.market ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.market_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.passwordresettoken ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.policy ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.policy_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.preference ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.preference_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.reaction ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.reaction_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipe ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipe_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipeingredient ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipeingredient_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipestep ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.recipestep_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.review ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.review_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.reviewproperty ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.reviewproperty_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.revinfo ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.role ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.role_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.tag ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.tag_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.tip ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.tip_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.ugc ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.ugc_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_badge ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_badge_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_role ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_role_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_usr ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.usr_usr_aud ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.viewing ENABLE ROW LEVEL SECURITY;
ALTER TABLE IF EXISTS public.viewing_aud ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Anyone can SELECT" ON public.authenticationrecord AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.authenticationrecord_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.badge AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.badge_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.comment AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.comment_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.deal AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.deal_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.entity AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.entity_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.entity_tag AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.entity_tag_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.food AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.food_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.foodpantrysite AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.foodpantrysite_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.foodproperty AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.foodproperty_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.market AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.market_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.passwordresettoken AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.policy AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.policy_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.preference AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.preference_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.reaction AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.reaction_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipe AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipe_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipeingredient AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipeingredient_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipestep AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.recipestep_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.review AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.review_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.reviewproperty AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.reviewproperty_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.revinfo AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.role AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.role_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.tag AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.tag_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.tip AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.tip_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.ugc AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.ugc_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_badge AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_badge_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_role AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_role_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_usr AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.usr_usr_aud AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.viewing AS PERMISSIVE FOR SELECT TO public USING (true);
CREATE POLICY "Anyone can SELECT" ON public.viewing_aud AS PERMISSIVE FOR SELECT TO public USING (true);


CREATE ROLE web_anon NOLOGIN;
CREATE ROLE api_user NOLOGIN;

GRANT usage ON SCHEMA public TO web_anon;
GRANT web_anon TO authenticator;
GRANT usage ON SCHEMA public TO api_user;
GRANT api_user TO authenticator;


GRANT ALL ON TABLE public.authenticationrecord TO web_anon, api_user;
GRANT ALL ON TABLE public.authenticationrecord_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.badge TO web_anon, api_user;
GRANT ALL ON TABLE public.badge_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.comment TO web_anon, api_user;
GRANT ALL ON TABLE public.comment_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.deal TO web_anon, api_user;
GRANT ALL ON TABLE public.deal_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.entity TO web_anon, api_user;
GRANT ALL ON TABLE public.entity_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.entity_tag TO web_anon, api_user;
GRANT ALL ON TABLE public.entity_tag_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.food TO web_anon, api_user;
GRANT ALL ON TABLE public.food_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.foodpantrysite TO web_anon, api_user;
GRANT ALL ON TABLE public.foodpantrysite_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.foodproperty TO web_anon, api_user;
GRANT ALL ON TABLE public.foodproperty_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.market TO web_anon, api_user;
GRANT ALL ON TABLE public.market_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.passwordresettoken TO web_anon, api_user;
GRANT ALL ON TABLE public.policy TO web_anon, api_user;
GRANT ALL ON TABLE public.policy_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.preference TO web_anon, api_user;
GRANT ALL ON TABLE public.preference_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.reaction TO web_anon, api_user;
GRANT ALL ON TABLE public.reaction_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.recipe TO web_anon, api_user;
GRANT ALL ON TABLE public.recipe_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.recipeingredient TO web_anon, api_user;
GRANT ALL ON TABLE public.recipeingredient_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.recipestep TO web_anon, api_user;
GRANT ALL ON TABLE public.recipestep_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.review TO web_anon, api_user;
GRANT ALL ON TABLE public.review_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.reviewproperty TO web_anon, api_user;
GRANT ALL ON TABLE public.reviewproperty_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.revinfo TO web_anon, api_user;
GRANT ALL ON TABLE public.role TO web_anon, api_user;
GRANT ALL ON TABLE public.role_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.tag TO web_anon, api_user;
GRANT ALL ON TABLE public.tag_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.tip TO web_anon, api_user;
GRANT ALL ON TABLE public.tip_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.ugc TO web_anon, api_user;
GRANT ALL ON TABLE public.ugc_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.usr TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_badge TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_badge_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_role TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_role_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_usr TO web_anon, api_user;
GRANT ALL ON TABLE public.usr_usr_aud TO web_anon, api_user;
GRANT ALL ON TABLE public.viewing TO web_anon, api_user;
GRANT ALL ON TABLE public.viewing_aud TO web_anon, api_user;

-- Tell PostgREST servers to reload their schema caches
NOTIFY pgrst, 'reload schema'